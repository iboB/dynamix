language: cpp
sudo: false
os: linux
compiler: gcc

notifications:
  email:
    on_success: change
    on_failure: always
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d605a517fe78a18459bd
    on_success: change
    on_failure: always
    on_start: never
git:
  depth: 5

addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty
      - llvm-toolchain-trusty-4.0
      - llvm-toolchain-trusty-5.0


matrix:
  include:
    # GCC 5
    - env: COMPILER=g++-5
      compiler: gcc
      addons: &gcc5
        apt:
          packages: ["g++-5",     "valgrind"]
          sources: *apt_sources

    # GCC 6
    - env: COMPILER=g++-6
      compiler: gcc
      addons: &gcc6
        apt:
          packages: ["g++-6",     "valgrind"]
          sources: *apt_sources

    # GCC 7
    - env: COMPILER=g++-7
      compiler: gcc
      addons: &gcc7
        apt:
          packages: ["g++-7",     "valgrind"]
          sources: *apt_sources

    # Clang 4.0
    - env: COMPILER=clang++-4.0 ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
      addons: &clang40
        apt:
          packages: ["clang-4.0", "valgrind", "g++-6"]
          sources: *apt_sources

    # Clang 5.0
    - env: COMPILER=clang++-5.0 ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
      addons: &clang50
        apt:
          packages: ["clang-5.0", "valgrind", "g++-6"]
          sources: *apt_sources

    # Xcode 8.3 Clang
    #- env: COMPILER=clang++ ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
    #  osx_image: xcode8.3
    #  os: osx

    # Xcode 9.1 Clang
    #- env: COMPILER=clang++ ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
    #  osx_image: xcode9.1
    #  os: osx

    # OSX GCC 5
    #- env: COMPILER=g++-5
    #  compiler: gcc
    #  osx_image: xcode7.3
    #  os: osx

  allow_failures:

    # Clang 5.0
    - env: COMPILER=clang++-5.0 ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      # cmake
      if brew list -1 | grep -q "^cmake\$"; then
        brew outdated cmake || brew upgrade cmake
      else
        brew install cmake
      fi
      # gcc
      if [[ "${COMPILER}" = "g++-5" ]]; then
        brew install gcc5
      fi
    fi

before_script:
  - ${COMPILER} --version
  - cmake --version

script:
  - export ASAN_OPTIONS=allow_addr2line=true:check_initialization_order=true:strict_init_order=true:strict_string_checks=true:detect_odr_violation=2:detect_stack_use_after_return=true:verbosity=0
  - export LSAN_OPTIONS=suppressions=../tools/lsan.supp
  - mkdir -p debug_build
  - cd debug_build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS}"
  - make -j2
  - ctest --output-on-failure
  - cd ..
  - mkdir -p release_build
  - cd release_build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS}"
  - make -j2
  - ctest --output-on_failure
